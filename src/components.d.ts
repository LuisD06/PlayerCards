/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Player } from "./utils/interfaces/player";
export namespace Components {
    interface CardGrid {
        "players": Player[];
    }
    interface MyButton {
        "size": 'small' | 'large' | 'medium';
        "text": string;
        "type": 'primary' | 'danger' | 'success';
        "variant": 'solid' | 'dashed' | 'void';
    }
    interface MyCard {
        "imageUrl": string;
        "playerName": string;
    }
    interface MyImage {
        "url": string;
    }
    interface MyText {
        "text": string;
    }
    interface PlayersDeck {
    }
}
declare global {
    interface HTMLCardGridElement extends Components.CardGrid, HTMLStencilElement {
    }
    var HTMLCardGridElement: {
        prototype: HTMLCardGridElement;
        new (): HTMLCardGridElement;
    };
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLMyCardElement extends Components.MyCard, HTMLStencilElement {
    }
    var HTMLMyCardElement: {
        prototype: HTMLMyCardElement;
        new (): HTMLMyCardElement;
    };
    interface HTMLMyImageElement extends Components.MyImage, HTMLStencilElement {
    }
    var HTMLMyImageElement: {
        prototype: HTMLMyImageElement;
        new (): HTMLMyImageElement;
    };
    interface HTMLMyTextElement extends Components.MyText, HTMLStencilElement {
    }
    var HTMLMyTextElement: {
        prototype: HTMLMyTextElement;
        new (): HTMLMyTextElement;
    };
    interface HTMLPlayersDeckElement extends Components.PlayersDeck, HTMLStencilElement {
    }
    var HTMLPlayersDeckElement: {
        prototype: HTMLPlayersDeckElement;
        new (): HTMLPlayersDeckElement;
    };
    interface HTMLElementTagNameMap {
        "card-grid": HTMLCardGridElement;
        "my-button": HTMLMyButtonElement;
        "my-card": HTMLMyCardElement;
        "my-image": HTMLMyImageElement;
        "my-text": HTMLMyTextElement;
        "players-deck": HTMLPlayersDeckElement;
    }
}
declare namespace LocalJSX {
    interface CardGrid {
        "players"?: Player[];
    }
    interface MyButton {
        "size"?: 'small' | 'large' | 'medium';
        "text"?: string;
        "type"?: 'primary' | 'danger' | 'success';
        "variant"?: 'solid' | 'dashed' | 'void';
    }
    interface MyCard {
        "imageUrl"?: string;
        "playerName"?: string;
    }
    interface MyImage {
        "url"?: string;
    }
    interface MyText {
        "text"?: string;
    }
    interface PlayersDeck {
    }
    interface IntrinsicElements {
        "card-grid": CardGrid;
        "my-button": MyButton;
        "my-card": MyCard;
        "my-image": MyImage;
        "my-text": MyText;
        "players-deck": PlayersDeck;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "card-grid": LocalJSX.CardGrid & JSXBase.HTMLAttributes<HTMLCardGridElement>;
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
            "my-card": LocalJSX.MyCard & JSXBase.HTMLAttributes<HTMLMyCardElement>;
            "my-image": LocalJSX.MyImage & JSXBase.HTMLAttributes<HTMLMyImageElement>;
            "my-text": LocalJSX.MyText & JSXBase.HTMLAttributes<HTMLMyTextElement>;
            "players-deck": LocalJSX.PlayersDeck & JSXBase.HTMLAttributes<HTMLPlayersDeckElement>;
        }
    }
}
